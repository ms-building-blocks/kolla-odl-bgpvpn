---
- include: enable_nested_virt.yml

- name: Install dependencies (ubuntu)
  apt:
    name: "{{ item }}"
  with_items: "{{ apt_packages }}"
  when: ansible_distribution|lower == "ubuntu"

- name: Start NTP
  systemd:
    name: ntp
    enabled: yes
    state: started

- name: Upgrade pip
  pip:
    name: pip
    extra_args: --upgrade

- name: Install PIP packages
  pip:
    name: "{{ item }}"
    umask: "0022"
    state: latest
  when: '"DEPLOY" in role|upper'
  with_items: "{{ pip_packages }}"

- name: Install git
  apt:
    name:
      - git
    state: latest
  when: '"DEPLOY" in role|upper'

- name: Populate /etc/hosts file
  lineinfile:
    path: /etc/hosts
    insertafter: EOF
    line: "{{ hostvars[item]['ansible_ssh_host'] }}  {{ hostvars[item]['inventory_hostname'] }}"
  with_items: "{{ groups['kolla-nodes'] }}"

- name: Generate user ssh key
  become: "{{ ansible_ssh_user }}"
  user:
    name: "{{ kolla_os_default_user }}"
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: ~/.ssh/id_rsa

- name: Read users' ssh key
  become: "{{ ansible_ssh_user }}"
  slurp:
    src: "~/.ssh/id_rsa.pub"
  register: ssh_key

- name: Remove known hosts
  become: "{{ ansible_ssh_user }}"
  file:
    path: "~/.ssh/known_hosts"
    state: absent
  ignore_errors: True

- name: Authorize users' ssh key for default user on all servers
  authorized_key:
    user: "{{ ansible_ssh_user }}"
    state: present
    key: "{{ ssh_key['content'] | b64decode }}"
  delegate_to: "{{ hostvars[item]['ansible_ssh_host'] }}"
  with_items: "{{ groups['kolla-nodes'] }}"

- name: Generate root user ssh key
  become: True
  user:
    name: "{{ kolla_os_default_user }}"
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: ~/.ssh/id_rsa

- name: Read root users' ssh key
  become: True
  slurp:
    src: "~/.ssh/id_rsa.pub"
  register: root_ssh_key

- name: Authorize users' ssh key for root user on all servers
  become: True
  authorized_key:
    user: root
    state: present
    key: "{{ root_ssh_key['content'] | b64decode }}"
  delegate_to: "{{ hostvars[item]['ansible_ssh_host'] }}"
  with_items: "{{ groups['kolla-nodes'] }}"

- name: Clone Contrail git repo
  become: "{{ ansible_ssh_user }}"
  git:
    repo: "{{ contrail_git_url }}"
    dest: "{{ contrail_dir }}"
    force: yes
  when: '"DEPLOY" in role|upper'

- name: Override contrail default variables
  include: override_contrail_vars.yml
  when: '"DEPLOY" in role|upper'

- name: Bootstrap nodes
  shell: "ansible-playbook \
            -i {{ kolla_inventory }} \
            -e @{{ global_vars }} \
            -e @{{ kolla_passwords }} \
            -e action=bootstrap-servers \
            {{ kolla_hosts_playbook }}"
  environment:
    ANSIBLE_HOST_KEY_CHECKING: False
  args:
    executable: /bin/bash
  when: '"DEPLOY" in role|upper'

- name: Install Kolla
  shell: "ansible-playbook \
            -i {{ kolla_inventory }} \
            -e @{{ global_vars }} \
            -e @{{ kolla_passwords }} \
            -e action=deploy \
            {{ kolla_playbook }}"
  environment:
    ANSIBLE_HOST_KEY_CHECKING: False
  args:
    executable: /bin/bash
  when: '"DEPLOY" in role|upper'

- name: Install Contrail
  shell: "ansible-playbook \
            -i {{ contrail_inventory }} \
            {{ contrail_playbook }}"
  environment:
    ANSIBLE_HOST_KEY_CHECKING: False
  args:
    executable: /bin/bash
  when: '"DEPLOY" in role|upper'

